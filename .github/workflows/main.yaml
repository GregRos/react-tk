name: REACT-TK

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    name: BUILD/PUBLISH?
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - name: CHECKOUT
        uses: actions/checkout@v4

      - name: SETUP PYTHON
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: CACHE POETRY AND PIP
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: INSTALL POETRY
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: POETRY INSTALL
        run: poetry install --with dev

      - name: BLACK CHECK
        run: poetry run black --check .

      - name: PYRIGHT
        run: poetry run pyright

      - name: POETRY BUILD
        run: poetry build

      - name: POETRY TEST
        run: poetry run pytest
      - name: PUBLISH
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          # Ensure built distributions exist and publish using configured token
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "ERROR: no built distributions found in dist/ â€” aborting publish"
            exit 1
          fi
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish --no-interaction
